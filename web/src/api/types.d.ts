/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/players/{id}/qr": {
    /** @description Get player token qr code */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        200: {
          content: {
            "image/png": unknown;
          };
        };
        /** @description unexpected error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Error: {
      message: string;
    };
    Event: unknown;
    EventBase: {
      type: components["schemas"]["EventType"];
    };
    /** @enum {string} */
    EventType: "player_state" | "player_state_partial";
    EventDataPlayerStatePartial: unknown;
    EventDataPlayerState: unknown;
    /** @enum {string} */
    PlayerPlaybackState: "IDLE" | "BUFFERING" | "READY" | "ENDED";
    PlayerStatePartial: {
      /** Format: int64 */
      id: number;
      name?: string;
      connected?: boolean;
      ready?: boolean;
      min_volume?: number;
      max_volume?: number;
      volume?: number;
      muted?: boolean;
      playback_state?: components["schemas"]["PlayerPlaybackState"];
      playback_error?: string;
      playing?: boolean;
      loading?: boolean;
      title?: string;
      genre?: string;
      station?: string;
      uri?: string;
    };
    PlayerState: components["schemas"]["PlayerStatePartial"] & Record<string, never>;
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
