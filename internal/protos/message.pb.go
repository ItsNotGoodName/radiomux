// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: shared/message.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Rating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRated    bool  `protobuf:"varint,1,opt,name=IsRated,proto3" json:"IsRated,omitempty"`
	RatingType int32 `protobuf:"varint,2,opt,name=RatingType,proto3" json:"RatingType,omitempty"`
}

func (x *Rating) Reset() {
	*x = Rating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rating) ProtoMessage() {}

func (x *Rating) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rating.ProtoReflect.Descriptor instead.
func (*Rating) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{0}
}

func (x *Rating) GetIsRated() bool {
	if x != nil {
		return x.IsRated
	}
	return false
}

func (x *Rating) GetRatingType() int32 {
	if x != nil {
		return x.RatingType
	}
	return 0
}

type MediaMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string  `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Artist          string  `protobuf:"bytes,2,opt,name=Artist,proto3" json:"Artist,omitempty"`
	AlbumTitle      string  `protobuf:"bytes,3,opt,name=AlbumTitle,proto3" json:"AlbumTitle,omitempty"`
	AlbumArtist     string  `protobuf:"bytes,4,opt,name=AlbumArtist,proto3" json:"AlbumArtist,omitempty"`
	DisplayTitle    string  `protobuf:"bytes,5,opt,name=DisplayTitle,proto3" json:"DisplayTitle,omitempty"`
	Subtitle        string  `protobuf:"bytes,6,opt,name=Subtitle,proto3" json:"Subtitle,omitempty"`
	Description     string  `protobuf:"bytes,7,opt,name=Description,proto3" json:"Description,omitempty"`
	UserRating      *Rating `protobuf:"bytes,8,opt,name=UserRating,proto3" json:"UserRating,omitempty"`
	OverallRating   *Rating `protobuf:"bytes,9,opt,name=OverallRating,proto3" json:"OverallRating,omitempty"`
	ArtworkData     []byte  `protobuf:"bytes,10,opt,name=ArtworkData,proto3" json:"ArtworkData,omitempty"`
	ArtworkDataType int32   `protobuf:"varint,11,opt,name=ArtworkDataType,proto3" json:"ArtworkDataType,omitempty"`
	ArtworkUri      string  `protobuf:"bytes,12,opt,name=ArtworkUri,proto3" json:"ArtworkUri,omitempty"`
	TrackNumber     int32   `protobuf:"varint,13,opt,name=TrackNumber,proto3" json:"TrackNumber,omitempty"`
	TotalTrackCount int32   `protobuf:"varint,14,opt,name=TotalTrackCount,proto3" json:"TotalTrackCount,omitempty"`
	IsBrowsable     bool    `protobuf:"varint,15,opt,name=IsBrowsable,proto3" json:"IsBrowsable,omitempty"`
	IsPlayable      bool    `protobuf:"varint,16,opt,name=IsPlayable,proto3" json:"IsPlayable,omitempty"`
	RecordingYear   int32   `protobuf:"varint,17,opt,name=RecordingYear,proto3" json:"RecordingYear,omitempty"`
	RecordingMonth  int32   `protobuf:"varint,18,opt,name=RecordingMonth,proto3" json:"RecordingMonth,omitempty"`
	RecordingDay    int32   `protobuf:"varint,19,opt,name=RecordingDay,proto3" json:"RecordingDay,omitempty"`
	ReleaseYear     int32   `protobuf:"varint,20,opt,name=ReleaseYear,proto3" json:"ReleaseYear,omitempty"`
	ReleaseMonth    int32   `protobuf:"varint,21,opt,name=ReleaseMonth,proto3" json:"ReleaseMonth,omitempty"`
	ReleaseDay      int32   `protobuf:"varint,22,opt,name=ReleaseDay,proto3" json:"ReleaseDay,omitempty"`
	Writer          string  `protobuf:"bytes,23,opt,name=Writer,proto3" json:"Writer,omitempty"`
	Composer        string  `protobuf:"bytes,24,opt,name=Composer,proto3" json:"Composer,omitempty"`
	Conductor       string  `protobuf:"bytes,25,opt,name=Conductor,proto3" json:"Conductor,omitempty"`
	DiscNumber      int32   `protobuf:"varint,26,opt,name=DiscNumber,proto3" json:"DiscNumber,omitempty"`
	TotalDiscCount  int32   `protobuf:"varint,27,opt,name=TotalDiscCount,proto3" json:"TotalDiscCount,omitempty"`
	Genre           string  `protobuf:"bytes,28,opt,name=Genre,proto3" json:"Genre,omitempty"`
	Compilation     string  `protobuf:"bytes,29,opt,name=Compilation,proto3" json:"Compilation,omitempty"`
	Station         string  `protobuf:"bytes,30,opt,name=Station,proto3" json:"Station,omitempty"`
	MediaType       int32   `protobuf:"varint,31,opt,name=MediaType,proto3" json:"MediaType,omitempty"`
}

func (x *MediaMetadata) Reset() {
	*x = MediaMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaMetadata) ProtoMessage() {}

func (x *MediaMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaMetadata.ProtoReflect.Descriptor instead.
func (*MediaMetadata) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{1}
}

func (x *MediaMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MediaMetadata) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *MediaMetadata) GetAlbumTitle() string {
	if x != nil {
		return x.AlbumTitle
	}
	return ""
}

func (x *MediaMetadata) GetAlbumArtist() string {
	if x != nil {
		return x.AlbumArtist
	}
	return ""
}

func (x *MediaMetadata) GetDisplayTitle() string {
	if x != nil {
		return x.DisplayTitle
	}
	return ""
}

func (x *MediaMetadata) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *MediaMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MediaMetadata) GetUserRating() *Rating {
	if x != nil {
		return x.UserRating
	}
	return nil
}

func (x *MediaMetadata) GetOverallRating() *Rating {
	if x != nil {
		return x.OverallRating
	}
	return nil
}

func (x *MediaMetadata) GetArtworkData() []byte {
	if x != nil {
		return x.ArtworkData
	}
	return nil
}

func (x *MediaMetadata) GetArtworkDataType() int32 {
	if x != nil {
		return x.ArtworkDataType
	}
	return 0
}

func (x *MediaMetadata) GetArtworkUri() string {
	if x != nil {
		return x.ArtworkUri
	}
	return ""
}

func (x *MediaMetadata) GetTrackNumber() int32 {
	if x != nil {
		return x.TrackNumber
	}
	return 0
}

func (x *MediaMetadata) GetTotalTrackCount() int32 {
	if x != nil {
		return x.TotalTrackCount
	}
	return 0
}

func (x *MediaMetadata) GetIsBrowsable() bool {
	if x != nil {
		return x.IsBrowsable
	}
	return false
}

func (x *MediaMetadata) GetIsPlayable() bool {
	if x != nil {
		return x.IsPlayable
	}
	return false
}

func (x *MediaMetadata) GetRecordingYear() int32 {
	if x != nil {
		return x.RecordingYear
	}
	return 0
}

func (x *MediaMetadata) GetRecordingMonth() int32 {
	if x != nil {
		return x.RecordingMonth
	}
	return 0
}

func (x *MediaMetadata) GetRecordingDay() int32 {
	if x != nil {
		return x.RecordingDay
	}
	return 0
}

func (x *MediaMetadata) GetReleaseYear() int32 {
	if x != nil {
		return x.ReleaseYear
	}
	return 0
}

func (x *MediaMetadata) GetReleaseMonth() int32 {
	if x != nil {
		return x.ReleaseMonth
	}
	return 0
}

func (x *MediaMetadata) GetReleaseDay() int32 {
	if x != nil {
		return x.ReleaseDay
	}
	return 0
}

func (x *MediaMetadata) GetWriter() string {
	if x != nil {
		return x.Writer
	}
	return ""
}

func (x *MediaMetadata) GetComposer() string {
	if x != nil {
		return x.Composer
	}
	return ""
}

func (x *MediaMetadata) GetConductor() string {
	if x != nil {
		return x.Conductor
	}
	return ""
}

func (x *MediaMetadata) GetDiscNumber() int32 {
	if x != nil {
		return x.DiscNumber
	}
	return 0
}

func (x *MediaMetadata) GetTotalDiscCount() int32 {
	if x != nil {
		return x.TotalDiscCount
	}
	return 0
}

func (x *MediaMetadata) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *MediaMetadata) GetCompilation() string {
	if x != nil {
		return x.Compilation
	}
	return ""
}

func (x *MediaMetadata) GetStation() string {
	if x != nil {
		return x.Station
	}
	return ""
}

func (x *MediaMetadata) GetMediaType() int32 {
	if x != nil {
		return x.MediaType
	}
	return 0
}

type PlaybackException struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode   int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	TimestampMs int64 `protobuf:"varint,2,opt,name=timestampMs,proto3" json:"timestampMs,omitempty"`
}

func (x *PlaybackException) Reset() {
	*x = PlaybackException{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaybackException) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackException) ProtoMessage() {}

func (x *PlaybackException) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackException.ProtoReflect.Descriptor instead.
func (*PlaybackException) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{2}
}

func (x *PlaybackException) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *PlaybackException) GetTimestampMs() int64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

type PlaybackParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speed float32 `protobuf:"fixed32,1,opt,name=speed,proto3" json:"speed,omitempty"`
	Pitch float32 `protobuf:"fixed32,2,opt,name=pitch,proto3" json:"pitch,omitempty"`
}

func (x *PlaybackParameters) Reset() {
	*x = PlaybackParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaybackParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackParameters) ProtoMessage() {}

func (x *PlaybackParameters) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackParameters.ProtoReflect.Descriptor instead.
func (*PlaybackParameters) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{3}
}

func (x *PlaybackParameters) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *PlaybackParameters) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinVolume int32 `protobuf:"varint,1,opt,name=MinVolume,proto3" json:"MinVolume,omitempty"`
	MaxVolume int32 `protobuf:"varint,2,opt,name=MaxVolume,proto3" json:"MaxVolume,omitempty"`
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{4}
}

func (x *DeviceInfo) GetMinVolume() int32 {
	if x != nil {
		return x.MinVolume
	}
	return 0
}

func (x *DeviceInfo) GetMaxVolume() int32 {
	if x != nil {
		return x.MaxVolume
	}
	return 0
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*Event_RpcReply
	//	*Event_OnMediaMetadataChanged
	//	*Event_OnPlaylistMetadataChanged
	//	*Event_OnIsLoadingChanged
	//	*Event_OnPlaybackStateChanged
	//	*Event_OnIsPlayingChanged
	//	*Event_OnPlayerError
	//	*Event_OnPlaybackParametersChanged
	//	*Event_OnVolumeChanged
	//	*Event_OnDeviceInfoChanged
	//	*Event_OnDeviceVolumeChanged
	//	*Event_OnCurrentUriChanged
	Payload isEvent_Payload `protobuf_oneof:"payload"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{5}
}

func (m *Event) GetPayload() isEvent_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Event) GetRpcReply() *RpcReply {
	if x, ok := x.GetPayload().(*Event_RpcReply); ok {
		return x.RpcReply
	}
	return nil
}

func (x *Event) GetOnMediaMetadataChanged() *OnMediaMetadataChanged {
	if x, ok := x.GetPayload().(*Event_OnMediaMetadataChanged); ok {
		return x.OnMediaMetadataChanged
	}
	return nil
}

func (x *Event) GetOnPlaylistMetadataChanged() *OnPlaylistMetadataChanged {
	if x, ok := x.GetPayload().(*Event_OnPlaylistMetadataChanged); ok {
		return x.OnPlaylistMetadataChanged
	}
	return nil
}

func (x *Event) GetOnIsLoadingChanged() *OnIsLoadingChanged {
	if x, ok := x.GetPayload().(*Event_OnIsLoadingChanged); ok {
		return x.OnIsLoadingChanged
	}
	return nil
}

func (x *Event) GetOnPlaybackStateChanged() *OnPlaybackStateChanged {
	if x, ok := x.GetPayload().(*Event_OnPlaybackStateChanged); ok {
		return x.OnPlaybackStateChanged
	}
	return nil
}

func (x *Event) GetOnIsPlayingChanged() *OnIsPlayingChanged {
	if x, ok := x.GetPayload().(*Event_OnIsPlayingChanged); ok {
		return x.OnIsPlayingChanged
	}
	return nil
}

func (x *Event) GetOnPlayerError() *OnPlayerError {
	if x, ok := x.GetPayload().(*Event_OnPlayerError); ok {
		return x.OnPlayerError
	}
	return nil
}

func (x *Event) GetOnPlaybackParametersChanged() *OnPlaybackParametersChanged {
	if x, ok := x.GetPayload().(*Event_OnPlaybackParametersChanged); ok {
		return x.OnPlaybackParametersChanged
	}
	return nil
}

func (x *Event) GetOnVolumeChanged() *OnVolumeChanged {
	if x, ok := x.GetPayload().(*Event_OnVolumeChanged); ok {
		return x.OnVolumeChanged
	}
	return nil
}

func (x *Event) GetOnDeviceInfoChanged() *OnDeviceInfoChanged {
	if x, ok := x.GetPayload().(*Event_OnDeviceInfoChanged); ok {
		return x.OnDeviceInfoChanged
	}
	return nil
}

func (x *Event) GetOnDeviceVolumeChanged() *OnDeviceVolumeChanged {
	if x, ok := x.GetPayload().(*Event_OnDeviceVolumeChanged); ok {
		return x.OnDeviceVolumeChanged
	}
	return nil
}

func (x *Event) GetOnCurrentUriChanged() *OnCurrentUriChanged {
	if x, ok := x.GetPayload().(*Event_OnCurrentUriChanged); ok {
		return x.OnCurrentUriChanged
	}
	return nil
}

type isEvent_Payload interface {
	isEvent_Payload()
}

type Event_RpcReply struct {
	RpcReply *RpcReply `protobuf:"bytes,1,opt,name=RpcReply,proto3,oneof"`
}

type Event_OnMediaMetadataChanged struct {
	OnMediaMetadataChanged *OnMediaMetadataChanged `protobuf:"bytes,2,opt,name=OnMediaMetadataChanged,proto3,oneof"`
}

type Event_OnPlaylistMetadataChanged struct {
	OnPlaylistMetadataChanged *OnPlaylistMetadataChanged `protobuf:"bytes,3,opt,name=OnPlaylistMetadataChanged,proto3,oneof"`
}

type Event_OnIsLoadingChanged struct {
	OnIsLoadingChanged *OnIsLoadingChanged `protobuf:"bytes,4,opt,name=OnIsLoadingChanged,proto3,oneof"`
}

type Event_OnPlaybackStateChanged struct {
	OnPlaybackStateChanged *OnPlaybackStateChanged `protobuf:"bytes,5,opt,name=OnPlaybackStateChanged,proto3,oneof"`
}

type Event_OnIsPlayingChanged struct {
	OnIsPlayingChanged *OnIsPlayingChanged `protobuf:"bytes,6,opt,name=OnIsPlayingChanged,proto3,oneof"`
}

type Event_OnPlayerError struct {
	OnPlayerError *OnPlayerError `protobuf:"bytes,7,opt,name=OnPlayerError,proto3,oneof"`
}

type Event_OnPlaybackParametersChanged struct {
	OnPlaybackParametersChanged *OnPlaybackParametersChanged `protobuf:"bytes,8,opt,name=OnPlaybackParametersChanged,proto3,oneof"`
}

type Event_OnVolumeChanged struct {
	OnVolumeChanged *OnVolumeChanged `protobuf:"bytes,9,opt,name=OnVolumeChanged,proto3,oneof"`
}

type Event_OnDeviceInfoChanged struct {
	OnDeviceInfoChanged *OnDeviceInfoChanged `protobuf:"bytes,10,opt,name=OnDeviceInfoChanged,proto3,oneof"`
}

type Event_OnDeviceVolumeChanged struct {
	OnDeviceVolumeChanged *OnDeviceVolumeChanged `protobuf:"bytes,11,opt,name=OnDeviceVolumeChanged,proto3,oneof"`
}

type Event_OnCurrentUriChanged struct {
	OnCurrentUriChanged *OnCurrentUriChanged `protobuf:"bytes,12,opt,name=OnCurrentUriChanged,proto3,oneof"`
}

func (*Event_RpcReply) isEvent_Payload() {}

func (*Event_OnMediaMetadataChanged) isEvent_Payload() {}

func (*Event_OnPlaylistMetadataChanged) isEvent_Payload() {}

func (*Event_OnIsLoadingChanged) isEvent_Payload() {}

func (*Event_OnPlaybackStateChanged) isEvent_Payload() {}

func (*Event_OnIsPlayingChanged) isEvent_Payload() {}

func (*Event_OnPlayerError) isEvent_Payload() {}

func (*Event_OnPlaybackParametersChanged) isEvent_Payload() {}

func (*Event_OnVolumeChanged) isEvent_Payload() {}

func (*Event_OnDeviceInfoChanged) isEvent_Payload() {}

func (*Event_OnDeviceVolumeChanged) isEvent_Payload() {}

func (*Event_OnCurrentUriChanged) isEvent_Payload() {}

type RpcReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RpcReply) Reset() {
	*x = RpcReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcReply) ProtoMessage() {}

func (x *RpcReply) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcReply.ProtoReflect.Descriptor instead.
func (*RpcReply) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{6}
}

func (x *RpcReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type OnMediaMetadataChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaMetadata *MediaMetadata `protobuf:"bytes,1,opt,name=media_metadata,json=mediaMetadata,proto3" json:"media_metadata,omitempty"`
}

func (x *OnMediaMetadataChanged) Reset() {
	*x = OnMediaMetadataChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnMediaMetadataChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnMediaMetadataChanged) ProtoMessage() {}

func (x *OnMediaMetadataChanged) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnMediaMetadataChanged.ProtoReflect.Descriptor instead.
func (*OnMediaMetadataChanged) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{7}
}

func (x *OnMediaMetadataChanged) GetMediaMetadata() *MediaMetadata {
	if x != nil {
		return x.MediaMetadata
	}
	return nil
}

type OnPlaylistMetadataChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaMetadata *MediaMetadata `protobuf:"bytes,1,opt,name=media_metadata,json=mediaMetadata,proto3" json:"media_metadata,omitempty"`
}

func (x *OnPlaylistMetadataChanged) Reset() {
	*x = OnPlaylistMetadataChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnPlaylistMetadataChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnPlaylistMetadataChanged) ProtoMessage() {}

func (x *OnPlaylistMetadataChanged) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnPlaylistMetadataChanged.ProtoReflect.Descriptor instead.
func (*OnPlaylistMetadataChanged) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{8}
}

func (x *OnPlaylistMetadataChanged) GetMediaMetadata() *MediaMetadata {
	if x != nil {
		return x.MediaMetadata
	}
	return nil
}

type OnIsLoadingChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLoading bool `protobuf:"varint,1,opt,name=is_loading,json=isLoading,proto3" json:"is_loading,omitempty"`
}

func (x *OnIsLoadingChanged) Reset() {
	*x = OnIsLoadingChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnIsLoadingChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnIsLoadingChanged) ProtoMessage() {}

func (x *OnIsLoadingChanged) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnIsLoadingChanged.ProtoReflect.Descriptor instead.
func (*OnIsLoadingChanged) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{9}
}

func (x *OnIsLoadingChanged) GetIsLoading() bool {
	if x != nil {
		return x.IsLoading
	}
	return false
}

type OnPlaybackStateChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaybackState int32 `protobuf:"varint,1,opt,name=playback_state,json=playbackState,proto3" json:"playback_state,omitempty"`
}

func (x *OnPlaybackStateChanged) Reset() {
	*x = OnPlaybackStateChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnPlaybackStateChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnPlaybackStateChanged) ProtoMessage() {}

func (x *OnPlaybackStateChanged) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnPlaybackStateChanged.ProtoReflect.Descriptor instead.
func (*OnPlaybackStateChanged) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{10}
}

func (x *OnPlaybackStateChanged) GetPlaybackState() int32 {
	if x != nil {
		return x.PlaybackState
	}
	return 0
}

type OnIsPlayingChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPlaying bool `protobuf:"varint,1,opt,name=is_playing,json=isPlaying,proto3" json:"is_playing,omitempty"`
}

func (x *OnIsPlayingChanged) Reset() {
	*x = OnIsPlayingChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnIsPlayingChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnIsPlayingChanged) ProtoMessage() {}

func (x *OnIsPlayingChanged) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnIsPlayingChanged.ProtoReflect.Descriptor instead.
func (*OnIsPlayingChanged) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{11}
}

func (x *OnIsPlayingChanged) GetIsPlaying() bool {
	if x != nil {
		return x.IsPlaying
	}
	return false
}

type OnPlayerError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *PlaybackException `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *OnPlayerError) Reset() {
	*x = OnPlayerError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnPlayerError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnPlayerError) ProtoMessage() {}

func (x *OnPlayerError) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnPlayerError.ProtoReflect.Descriptor instead.
func (*OnPlayerError) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{12}
}

func (x *OnPlayerError) GetError() *PlaybackException {
	if x != nil {
		return x.Error
	}
	return nil
}

type OnPlaybackParametersChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaybackParameters *PlaybackParameters `protobuf:"bytes,1,opt,name=playback_parameters,json=playbackParameters,proto3" json:"playback_parameters,omitempty"`
}

func (x *OnPlaybackParametersChanged) Reset() {
	*x = OnPlaybackParametersChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnPlaybackParametersChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnPlaybackParametersChanged) ProtoMessage() {}

func (x *OnPlaybackParametersChanged) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnPlaybackParametersChanged.ProtoReflect.Descriptor instead.
func (*OnPlaybackParametersChanged) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{13}
}

func (x *OnPlaybackParametersChanged) GetPlaybackParameters() *PlaybackParameters {
	if x != nil {
		return x.PlaybackParameters
	}
	return nil
}

type OnVolumeChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume float32 `protobuf:"fixed32,1,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *OnVolumeChanged) Reset() {
	*x = OnVolumeChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnVolumeChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnVolumeChanged) ProtoMessage() {}

func (x *OnVolumeChanged) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnVolumeChanged.ProtoReflect.Descriptor instead.
func (*OnVolumeChanged) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{14}
}

func (x *OnVolumeChanged) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

type OnDeviceInfoChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceInfo *DeviceInfo `protobuf:"bytes,1,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
}

func (x *OnDeviceInfoChanged) Reset() {
	*x = OnDeviceInfoChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnDeviceInfoChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnDeviceInfoChanged) ProtoMessage() {}

func (x *OnDeviceInfoChanged) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnDeviceInfoChanged.ProtoReflect.Descriptor instead.
func (*OnDeviceInfoChanged) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{15}
}

func (x *OnDeviceInfoChanged) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

type OnDeviceVolumeChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume int32 `protobuf:"varint,1,opt,name=volume,proto3" json:"volume,omitempty"`
	Muted  bool  `protobuf:"varint,2,opt,name=muted,proto3" json:"muted,omitempty"`
}

func (x *OnDeviceVolumeChanged) Reset() {
	*x = OnDeviceVolumeChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnDeviceVolumeChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnDeviceVolumeChanged) ProtoMessage() {}

func (x *OnDeviceVolumeChanged) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnDeviceVolumeChanged.ProtoReflect.Descriptor instead.
func (*OnDeviceVolumeChanged) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{16}
}

func (x *OnDeviceVolumeChanged) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *OnDeviceVolumeChanged) GetMuted() bool {
	if x != nil {
		return x.Muted
	}
	return false
}

type OnCurrentUriChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *OnCurrentUriChanged) Reset() {
	*x = OnCurrentUriChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnCurrentUriChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnCurrentUriChanged) ProtoMessage() {}

func (x *OnCurrentUriChanged) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnCurrentUriChanged.ProtoReflect.Descriptor instead.
func (*OnCurrentUriChanged) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{17}
}

func (x *OnCurrentUriChanged) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type Rpc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*Rpc_Stop
	//	*Rpc_Play
	//	*Rpc_Pause
	//	*Rpc_Prepare
	//	*Rpc_SetPlayWhenReady
	//	*Rpc_SetMediaItem
	//	*Rpc_SetVolume
	//	*Rpc_SetDeviceVolume
	//	*Rpc_IncreaseDeviceVolume
	//	*Rpc_DecreaseDeviceVolume
	//	*Rpc_SetDeviceMuted
	//	*Rpc_SyncState
	//	*Rpc_SeekToDefaultPosition
	Payload isRpc_Payload `protobuf_oneof:"payload"`
}

func (x *Rpc) Reset() {
	*x = Rpc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rpc) ProtoMessage() {}

func (x *Rpc) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rpc.ProtoReflect.Descriptor instead.
func (*Rpc) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{18}
}

func (x *Rpc) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *Rpc) GetPayload() isRpc_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Rpc) GetStop() *Stop {
	if x, ok := x.GetPayload().(*Rpc_Stop); ok {
		return x.Stop
	}
	return nil
}

func (x *Rpc) GetPlay() *Play {
	if x, ok := x.GetPayload().(*Rpc_Play); ok {
		return x.Play
	}
	return nil
}

func (x *Rpc) GetPause() *Pause {
	if x, ok := x.GetPayload().(*Rpc_Pause); ok {
		return x.Pause
	}
	return nil
}

func (x *Rpc) GetPrepare() *Prepare {
	if x, ok := x.GetPayload().(*Rpc_Prepare); ok {
		return x.Prepare
	}
	return nil
}

func (x *Rpc) GetSetPlayWhenReady() *SetPlayWhenReady {
	if x, ok := x.GetPayload().(*Rpc_SetPlayWhenReady); ok {
		return x.SetPlayWhenReady
	}
	return nil
}

func (x *Rpc) GetSetMediaItem() *SetMediaItem {
	if x, ok := x.GetPayload().(*Rpc_SetMediaItem); ok {
		return x.SetMediaItem
	}
	return nil
}

func (x *Rpc) GetSetVolume() *SetVolume {
	if x, ok := x.GetPayload().(*Rpc_SetVolume); ok {
		return x.SetVolume
	}
	return nil
}

func (x *Rpc) GetSetDeviceVolume() *SetDeviceVolume {
	if x, ok := x.GetPayload().(*Rpc_SetDeviceVolume); ok {
		return x.SetDeviceVolume
	}
	return nil
}

func (x *Rpc) GetIncreaseDeviceVolume() *IncreaseDeviceVolume {
	if x, ok := x.GetPayload().(*Rpc_IncreaseDeviceVolume); ok {
		return x.IncreaseDeviceVolume
	}
	return nil
}

func (x *Rpc) GetDecreaseDeviceVolume() *DecreaseDeviceVolume {
	if x, ok := x.GetPayload().(*Rpc_DecreaseDeviceVolume); ok {
		return x.DecreaseDeviceVolume
	}
	return nil
}

func (x *Rpc) GetSetDeviceMuted() *SetDeviceMuted {
	if x, ok := x.GetPayload().(*Rpc_SetDeviceMuted); ok {
		return x.SetDeviceMuted
	}
	return nil
}

func (x *Rpc) GetSyncState() *SyncState {
	if x, ok := x.GetPayload().(*Rpc_SyncState); ok {
		return x.SyncState
	}
	return nil
}

func (x *Rpc) GetSeekToDefaultPosition() *SeekToDefaultPosition {
	if x, ok := x.GetPayload().(*Rpc_SeekToDefaultPosition); ok {
		return x.SeekToDefaultPosition
	}
	return nil
}

type isRpc_Payload interface {
	isRpc_Payload()
}

type Rpc_Stop struct {
	Stop *Stop `protobuf:"bytes,2,opt,name=Stop,proto3,oneof"`
}

type Rpc_Play struct {
	Play *Play `protobuf:"bytes,3,opt,name=Play,proto3,oneof"`
}

type Rpc_Pause struct {
	Pause *Pause `protobuf:"bytes,4,opt,name=Pause,proto3,oneof"`
}

type Rpc_Prepare struct {
	Prepare *Prepare `protobuf:"bytes,5,opt,name=Prepare,proto3,oneof"`
}

type Rpc_SetPlayWhenReady struct {
	SetPlayWhenReady *SetPlayWhenReady `protobuf:"bytes,6,opt,name=SetPlayWhenReady,proto3,oneof"`
}

type Rpc_SetMediaItem struct {
	SetMediaItem *SetMediaItem `protobuf:"bytes,7,opt,name=SetMediaItem,proto3,oneof"`
}

type Rpc_SetVolume struct {
	SetVolume *SetVolume `protobuf:"bytes,8,opt,name=SetVolume,proto3,oneof"`
}

type Rpc_SetDeviceVolume struct {
	SetDeviceVolume *SetDeviceVolume `protobuf:"bytes,9,opt,name=SetDeviceVolume,proto3,oneof"`
}

type Rpc_IncreaseDeviceVolume struct {
	IncreaseDeviceVolume *IncreaseDeviceVolume `protobuf:"bytes,10,opt,name=IncreaseDeviceVolume,proto3,oneof"`
}

type Rpc_DecreaseDeviceVolume struct {
	DecreaseDeviceVolume *DecreaseDeviceVolume `protobuf:"bytes,11,opt,name=DecreaseDeviceVolume,proto3,oneof"`
}

type Rpc_SetDeviceMuted struct {
	SetDeviceMuted *SetDeviceMuted `protobuf:"bytes,12,opt,name=SetDeviceMuted,proto3,oneof"`
}

type Rpc_SyncState struct {
	SyncState *SyncState `protobuf:"bytes,13,opt,name=SyncState,proto3,oneof"`
}

type Rpc_SeekToDefaultPosition struct {
	SeekToDefaultPosition *SeekToDefaultPosition `protobuf:"bytes,14,opt,name=SeekToDefaultPosition,proto3,oneof"`
}

func (*Rpc_Stop) isRpc_Payload() {}

func (*Rpc_Play) isRpc_Payload() {}

func (*Rpc_Pause) isRpc_Payload() {}

func (*Rpc_Prepare) isRpc_Payload() {}

func (*Rpc_SetPlayWhenReady) isRpc_Payload() {}

func (*Rpc_SetMediaItem) isRpc_Payload() {}

func (*Rpc_SetVolume) isRpc_Payload() {}

func (*Rpc_SetDeviceVolume) isRpc_Payload() {}

func (*Rpc_IncreaseDeviceVolume) isRpc_Payload() {}

func (*Rpc_DecreaseDeviceVolume) isRpc_Payload() {}

func (*Rpc_SetDeviceMuted) isRpc_Payload() {}

func (*Rpc_SyncState) isRpc_Payload() {}

func (*Rpc_SeekToDefaultPosition) isRpc_Payload() {}

type Stop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Stop) Reset() {
	*x = Stop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop) ProtoMessage() {}

func (x *Stop) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop.ProtoReflect.Descriptor instead.
func (*Stop) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{19}
}

type Play struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Play) Reset() {
	*x = Play{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Play) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Play) ProtoMessage() {}

func (x *Play) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Play.ProtoReflect.Descriptor instead.
func (*Play) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{20}
}

type Pause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Pause) Reset() {
	*x = Pause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pause) ProtoMessage() {}

func (x *Pause) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pause.ProtoReflect.Descriptor instead.
func (*Pause) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{21}
}

type Prepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Prepare) Reset() {
	*x = Prepare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prepare) ProtoMessage() {}

func (x *Prepare) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prepare.ProtoReflect.Descriptor instead.
func (*Prepare) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{22}
}

type SetPlayWhenReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayWhenReady bool `protobuf:"varint,1,opt,name=play_when_ready,json=playWhenReady,proto3" json:"play_when_ready,omitempty"`
}

func (x *SetPlayWhenReady) Reset() {
	*x = SetPlayWhenReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayWhenReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayWhenReady) ProtoMessage() {}

func (x *SetPlayWhenReady) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayWhenReady.ProtoReflect.Descriptor instead.
func (*SetPlayWhenReady) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{23}
}

func (x *SetPlayWhenReady) GetPlayWhenReady() bool {
	if x != nil {
		return x.PlayWhenReady
	}
	return false
}

type SetMediaItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *SetMediaItem) Reset() {
	*x = SetMediaItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMediaItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMediaItem) ProtoMessage() {}

func (x *SetMediaItem) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMediaItem.ProtoReflect.Descriptor instead.
func (*SetMediaItem) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{24}
}

func (x *SetMediaItem) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type SetVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume float32 `protobuf:"fixed32,1,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *SetVolume) Reset() {
	*x = SetVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVolume) ProtoMessage() {}

func (x *SetVolume) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVolume.ProtoReflect.Descriptor instead.
func (*SetVolume) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{25}
}

func (x *SetVolume) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

type SetDeviceVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume int32 `protobuf:"varint,1,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *SetDeviceVolume) Reset() {
	*x = SetDeviceVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDeviceVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDeviceVolume) ProtoMessage() {}

func (x *SetDeviceVolume) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDeviceVolume.ProtoReflect.Descriptor instead.
func (*SetDeviceVolume) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{26}
}

func (x *SetDeviceVolume) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

type IncreaseDeviceVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IncreaseDeviceVolume) Reset() {
	*x = IncreaseDeviceVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncreaseDeviceVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncreaseDeviceVolume) ProtoMessage() {}

func (x *IncreaseDeviceVolume) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncreaseDeviceVolume.ProtoReflect.Descriptor instead.
func (*IncreaseDeviceVolume) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{27}
}

type DecreaseDeviceVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DecreaseDeviceVolume) Reset() {
	*x = DecreaseDeviceVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecreaseDeviceVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecreaseDeviceVolume) ProtoMessage() {}

func (x *DecreaseDeviceVolume) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecreaseDeviceVolume.ProtoReflect.Descriptor instead.
func (*DecreaseDeviceVolume) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{28}
}

type SetDeviceMuted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Muted bool `protobuf:"varint,1,opt,name=muted,proto3" json:"muted,omitempty"`
}

func (x *SetDeviceMuted) Reset() {
	*x = SetDeviceMuted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDeviceMuted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDeviceMuted) ProtoMessage() {}

func (x *SetDeviceMuted) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDeviceMuted.ProtoReflect.Descriptor instead.
func (*SetDeviceMuted) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{29}
}

func (x *SetDeviceMuted) GetMuted() bool {
	if x != nil {
		return x.Muted
	}
	return false
}

type SyncState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncState) Reset() {
	*x = SyncState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncState) ProtoMessage() {}

func (x *SyncState) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncState.ProtoReflect.Descriptor instead.
func (*SyncState) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{30}
}

type SeekToDefaultPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SeekToDefaultPosition) Reset() {
	*x = SeekToDefaultPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_message_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeekToDefaultPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekToDefaultPosition) ProtoMessage() {}

func (x *SeekToDefaultPosition) ProtoReflect() protoreflect.Message {
	mi := &file_shared_message_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekToDefaultPosition.ProtoReflect.Descriptor instead.
func (*SeekToDefaultPosition) Descriptor() ([]byte, []int) {
	return file_shared_message_proto_rawDescGZIP(), []int{31}
}

var File_shared_message_proto protoreflect.FileDescriptor

var file_shared_message_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x52, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x49, 0x73, 0x52, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x22, 0x95, 0x08, 0x0a, 0x0d, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x0d, 0x4f, 0x76, 0x65, 0x72, 0x61,
	0x6c, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x41, 0x72, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x72, 0x69,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x55,
	0x72, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x49, 0x73, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x59, 0x65, 0x61,
	0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x59, 0x65, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x22,
	0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x59, 0x65, 0x61,
	0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x59, 0x65, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x69,
	0x73, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x44, 0x69, 0x73, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43,
	0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x54, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x45, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x4d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x22, 0x40, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x22, 0x48, 0x0a, 0x0a, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x69, 0x6e,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x61, 0x78, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x22, 0x87, 0x07, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x27,
	0x0a, 0x08, 0x52, 0x70, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x08, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x51, 0x0a, 0x16, 0x4f, 0x6e, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4f, 0x6e, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x16, 0x4f, 0x6e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x19, 0x4f, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x4f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x48, 0x00, 0x52, 0x19, 0x4f, 0x6e, 0x50,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x12, 0x4f, 0x6e, 0x49, 0x73, 0x4c, 0x6f,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4f, 0x6e, 0x49, 0x73, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x48, 0x00, 0x52, 0x12, 0x4f, 0x6e, 0x49, 0x73, 0x4c,
	0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x51, 0x0a,
	0x16, 0x4f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x4f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x48, 0x00, 0x52, 0x16, 0x4f, 0x6e, 0x50, 0x6c, 0x61, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x12, 0x45, 0x0a, 0x12, 0x4f, 0x6e, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4f,
	0x6e, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x12, 0x4f, 0x6e, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x0d, 0x4f, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x4f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x0d, 0x4f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x60, 0x0a, 0x1b, 0x4f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x1b, 0x4f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x12, 0x3c, 0x0a, 0x0f, 0x4f, 0x6e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4f, 0x6e, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0f,
	0x4f, 0x6e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12,
	0x48, 0x0a, 0x13, 0x4f, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4f,
	0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x13, 0x4f, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x15, 0x4f, 0x6e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4f, 0x6e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x15, 0x4f, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x13, 0x4f, 0x6e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x69, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x55, 0x72, 0x69, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x48, 0x00, 0x52, 0x13,
	0x4f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x69, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x1a,
	0x0a, 0x08, 0x52, 0x70, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x16, 0x4f, 0x6e,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x0e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x52, 0x0a, 0x19, 0x4f,
	0x6e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x0e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x33, 0x0a, 0x12, 0x4f, 0x6e, 0x49, 0x73, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4c, 0x6f, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x22, 0x3f, 0x0a, 0x16, 0x4f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x33, 0x0a, 0x12, 0x4f, 0x6e, 0x49, 0x73, 0x50, 0x6c, 0x61,
	0x79, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x22, 0x39, 0x0a, 0x0d, 0x4f, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x63, 0x0a, 0x1b, 0x4f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x29, 0x0a, 0x0f, 0x4f, 0x6e,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x13, 0x4f, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x45, 0x0a, 0x15, 0x4f, 0x6e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x75, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x65,
	0x64, 0x22, 0x27, 0x0a, 0x13, 0x4f, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x72,
	0x69, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xd1, 0x05, 0x0a, 0x03, 0x52,
	0x70, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x48, 0x00, 0x52, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12,
	0x1b, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x48, 0x00, 0x52, 0x04, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x1e, 0x0a, 0x05,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x50, 0x61, 0x75, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x07,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x57, 0x68, 0x65,
	0x6e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x57, 0x68, 0x65, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x48,
	0x00, 0x52, 0x10, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x57, 0x68, 0x65, 0x6e, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x12, 0x33, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x65, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0c, 0x53, 0x65, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2a, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x65,
	0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09, 0x53, 0x65, 0x74, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x48,
	0x00, 0x52, 0x0f, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x14, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x14, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x4b, 0x0a, 0x14, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x14, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0e,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x75, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x15, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x6f, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x15, 0x53, 0x65,
	0x65, 0x6b, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x06,
	0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x22, 0x06, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x79, 0x22, 0x07,
	0x0a, 0x05, 0x50, 0x61, 0x75, 0x73, 0x65, 0x22, 0x09, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x22, 0x3a, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x57, 0x68, 0x65,
	0x6e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x77,
	0x68, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x70, 0x6c, 0x61, 0x79, 0x57, 0x68, 0x65, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x20,
	0x0a, 0x0c, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x22, 0x23, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x22, 0x16, 0x0a, 0x14, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x22, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x75, 0x74,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x22, 0x0b, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x65, 0x65, 0x6b, 0x54, 0x6f, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x34,
	0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x75, 0x72, 0x6e, 0x61, 0x69, 0x6e, 0x2e, 0x72, 0x61,
	0x64, 0x69, 0x6f, 0x6d, 0x75, 0x78, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x5a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shared_message_proto_rawDescOnce sync.Once
	file_shared_message_proto_rawDescData = file_shared_message_proto_rawDesc
)

func file_shared_message_proto_rawDescGZIP() []byte {
	file_shared_message_proto_rawDescOnce.Do(func() {
		file_shared_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_shared_message_proto_rawDescData)
	})
	return file_shared_message_proto_rawDescData
}

var file_shared_message_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_shared_message_proto_goTypes = []interface{}{
	(*Rating)(nil),                      // 0: Rating
	(*MediaMetadata)(nil),               // 1: MediaMetadata
	(*PlaybackException)(nil),           // 2: PlaybackException
	(*PlaybackParameters)(nil),          // 3: PlaybackParameters
	(*DeviceInfo)(nil),                  // 4: DeviceInfo
	(*Event)(nil),                       // 5: Event
	(*RpcReply)(nil),                    // 6: RpcReply
	(*OnMediaMetadataChanged)(nil),      // 7: OnMediaMetadataChanged
	(*OnPlaylistMetadataChanged)(nil),   // 8: OnPlaylistMetadataChanged
	(*OnIsLoadingChanged)(nil),          // 9: OnIsLoadingChanged
	(*OnPlaybackStateChanged)(nil),      // 10: OnPlaybackStateChanged
	(*OnIsPlayingChanged)(nil),          // 11: OnIsPlayingChanged
	(*OnPlayerError)(nil),               // 12: OnPlayerError
	(*OnPlaybackParametersChanged)(nil), // 13: OnPlaybackParametersChanged
	(*OnVolumeChanged)(nil),             // 14: OnVolumeChanged
	(*OnDeviceInfoChanged)(nil),         // 15: OnDeviceInfoChanged
	(*OnDeviceVolumeChanged)(nil),       // 16: OnDeviceVolumeChanged
	(*OnCurrentUriChanged)(nil),         // 17: OnCurrentUriChanged
	(*Rpc)(nil),                         // 18: Rpc
	(*Stop)(nil),                        // 19: Stop
	(*Play)(nil),                        // 20: Play
	(*Pause)(nil),                       // 21: Pause
	(*Prepare)(nil),                     // 22: Prepare
	(*SetPlayWhenReady)(nil),            // 23: SetPlayWhenReady
	(*SetMediaItem)(nil),                // 24: SetMediaItem
	(*SetVolume)(nil),                   // 25: SetVolume
	(*SetDeviceVolume)(nil),             // 26: SetDeviceVolume
	(*IncreaseDeviceVolume)(nil),        // 27: IncreaseDeviceVolume
	(*DecreaseDeviceVolume)(nil),        // 28: DecreaseDeviceVolume
	(*SetDeviceMuted)(nil),              // 29: SetDeviceMuted
	(*SyncState)(nil),                   // 30: SyncState
	(*SeekToDefaultPosition)(nil),       // 31: SeekToDefaultPosition
}
var file_shared_message_proto_depIdxs = []int32{
	0,  // 0: MediaMetadata.UserRating:type_name -> Rating
	0,  // 1: MediaMetadata.OverallRating:type_name -> Rating
	6,  // 2: Event.RpcReply:type_name -> RpcReply
	7,  // 3: Event.OnMediaMetadataChanged:type_name -> OnMediaMetadataChanged
	8,  // 4: Event.OnPlaylistMetadataChanged:type_name -> OnPlaylistMetadataChanged
	9,  // 5: Event.OnIsLoadingChanged:type_name -> OnIsLoadingChanged
	10, // 6: Event.OnPlaybackStateChanged:type_name -> OnPlaybackStateChanged
	11, // 7: Event.OnIsPlayingChanged:type_name -> OnIsPlayingChanged
	12, // 8: Event.OnPlayerError:type_name -> OnPlayerError
	13, // 9: Event.OnPlaybackParametersChanged:type_name -> OnPlaybackParametersChanged
	14, // 10: Event.OnVolumeChanged:type_name -> OnVolumeChanged
	15, // 11: Event.OnDeviceInfoChanged:type_name -> OnDeviceInfoChanged
	16, // 12: Event.OnDeviceVolumeChanged:type_name -> OnDeviceVolumeChanged
	17, // 13: Event.OnCurrentUriChanged:type_name -> OnCurrentUriChanged
	1,  // 14: OnMediaMetadataChanged.media_metadata:type_name -> MediaMetadata
	1,  // 15: OnPlaylistMetadataChanged.media_metadata:type_name -> MediaMetadata
	2,  // 16: OnPlayerError.error:type_name -> PlaybackException
	3,  // 17: OnPlaybackParametersChanged.playback_parameters:type_name -> PlaybackParameters
	4,  // 18: OnDeviceInfoChanged.device_info:type_name -> DeviceInfo
	19, // 19: Rpc.Stop:type_name -> Stop
	20, // 20: Rpc.Play:type_name -> Play
	21, // 21: Rpc.Pause:type_name -> Pause
	22, // 22: Rpc.Prepare:type_name -> Prepare
	23, // 23: Rpc.SetPlayWhenReady:type_name -> SetPlayWhenReady
	24, // 24: Rpc.SetMediaItem:type_name -> SetMediaItem
	25, // 25: Rpc.SetVolume:type_name -> SetVolume
	26, // 26: Rpc.SetDeviceVolume:type_name -> SetDeviceVolume
	27, // 27: Rpc.IncreaseDeviceVolume:type_name -> IncreaseDeviceVolume
	28, // 28: Rpc.DecreaseDeviceVolume:type_name -> DecreaseDeviceVolume
	29, // 29: Rpc.SetDeviceMuted:type_name -> SetDeviceMuted
	30, // 30: Rpc.SyncState:type_name -> SyncState
	31, // 31: Rpc.SeekToDefaultPosition:type_name -> SeekToDefaultPosition
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_shared_message_proto_init() }
func file_shared_message_proto_init() {
	if File_shared_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shared_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaybackException); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaybackParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnMediaMetadataChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnPlaylistMetadataChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnIsLoadingChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnPlaybackStateChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnIsPlayingChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnPlayerError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnPlaybackParametersChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnVolumeChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnDeviceInfoChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnDeviceVolumeChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnCurrentUriChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rpc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Play); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prepare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayWhenReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMediaItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDeviceVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncreaseDeviceVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecreaseDeviceVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDeviceMuted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_message_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeekToDefaultPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_shared_message_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Event_RpcReply)(nil),
		(*Event_OnMediaMetadataChanged)(nil),
		(*Event_OnPlaylistMetadataChanged)(nil),
		(*Event_OnIsLoadingChanged)(nil),
		(*Event_OnPlaybackStateChanged)(nil),
		(*Event_OnIsPlayingChanged)(nil),
		(*Event_OnPlayerError)(nil),
		(*Event_OnPlaybackParametersChanged)(nil),
		(*Event_OnVolumeChanged)(nil),
		(*Event_OnDeviceInfoChanged)(nil),
		(*Event_OnDeviceVolumeChanged)(nil),
		(*Event_OnCurrentUriChanged)(nil),
	}
	file_shared_message_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*Rpc_Stop)(nil),
		(*Rpc_Play)(nil),
		(*Rpc_Pause)(nil),
		(*Rpc_Prepare)(nil),
		(*Rpc_SetPlayWhenReady)(nil),
		(*Rpc_SetMediaItem)(nil),
		(*Rpc_SetVolume)(nil),
		(*Rpc_SetDeviceVolume)(nil),
		(*Rpc_IncreaseDeviceVolume)(nil),
		(*Rpc_DecreaseDeviceVolume)(nil),
		(*Rpc_SetDeviceMuted)(nil),
		(*Rpc_SyncState)(nil),
		(*Rpc_SeekToDefaultPosition)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shared_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shared_message_proto_goTypes,
		DependencyIndexes: file_shared_message_proto_depIdxs,
		MessageInfos:      file_shared_message_proto_msgTypes,
	}.Build()
	File_shared_message_proto = out.File
	file_shared_message_proto_rawDesc = nil
	file_shared_message_proto_goTypes = nil
	file_shared_message_proto_depIdxs = nil
}
