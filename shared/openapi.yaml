openapi: "3.0.0"
info:
  version: 1.0.0
  title: RadioMux
  description: Use your Android devices as remote controlled audio players.
paths:
  /players/{id}/qr:
    get:
      description: Get player's QR code for the Android app.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          content:
            image/png:
              schema:
                type: string
                format: binary
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    Event:
      oneof:
        - $ref: "#/components/schemas/EventDataPlayerState"
        - $ref: "#/components/schemas/EventDataPlayerStatePartial"
      discriminator:
        propertyName: "type"
        mapping:
          player_state: "#/components/schemas/EventDataPlayerState"
          player_state_partial: "#/components/schemas/EventDataPlayerStatePartial"

    EventBase:
      type: "object"
      required:
        - type
        - data
      properties:
        type:
          $ref: "#/components/schemas/EventType"

    EventType:
      type: string
      enum:
        - player_state
        - player_state_partial

    EventDataPlayerStatePartial:
      allof:
        - $ref: "#/components/schemas/EventBase"
        - properties:
            type:
              $ref: "#/components/schemas/EventType"
              value: "state_partial"
            data:
              type: array
              items:
                $ref: "#/components/schemas/PlayerStatePartial"

    EventDataPlayerState:
      allof:
        - $ref: "#/components/schemas/EventBase"
        - properties:
            type:
              $ref: "#/components/schemas/EventType"
              value: "state"
            data:
              type: array
              items:
                $ref: "#/components/schemas/PlayerState"

    PlayerPlaybackState:
      type: string
      enum:
        - IDLE
        - BUFFERING
        - READY
        - ENDED

    PlayerStatePartial:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        connected:
          type: boolean
        ready:
          type: boolean
        min_volume:
          type: integer
        max_volume:
          type: integer
        volume:
          type: integer
        muted:
          type: boolean
        playback_state:
          $ref: "#/components/schemas/PlayerPlaybackState"
        playback_error:
          type: string
        playing:
          type: boolean
        loading:
          type: boolean
        title:
          type: string
        genre:
          type: string
        station:
          type: string
        uri:
          type: string

    PlayerState:
      allOf:
        - $ref: "#/components/schemas/PlayerStatePartial"
        - type: object
          required:
            - name
            - connected
            - ready
            - min_volume
            - max_volume
            - volume
            - muted
            - playback_state
            - playback_error
            - playing
            - loading
            - title
            - genre
            - station
            - uri
